version: '3.9'

volumes:
  pg_data:

services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "python manage.py migrate"

  api:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./todolist/:/opt/todolist
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  front :
    image: sermalenk/skypro-front:lesson-37
    restart: always
    ports:
      - "80:80"
    depends_on:
      - api










